{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_5",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_7",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_7_to_port_2",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_8",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_10",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_10_to_port_12",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_15",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_16",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_13_to_port_17",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_15_to_port_18",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_16_to_port_19",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_17_to_port_21",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_17_to_port_22",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_22_to_port_23",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_17_to_port_24",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_17_to_port_25",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_26",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_18_to_port_28",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_30_to_port_27",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "id": "port_32_to_port_13",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_32_to_port_34",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_12_to_port_32",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_18_to_port_35",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_19_to_port_35",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_35_to_port_30",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_27_to_port_36",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "id": "port_36_to_port_37",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "id": "port_36_to_port_40",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_37_to_port_41",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "id": "port_41_to_port_42",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_37_to_port_43",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_37_to_port_44",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_44_to_port_45",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_40_to_port_46",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_40_to_port_47",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_46_to_port_48",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "48",
                    "targetPort": "48_in"
                },
                {
                    "id": "port_45_to_port_49",
                    "sourceNode": "45",
                    "sourcePort": "45_out",
                    "targetNode": "49",
                    "targetPort": "49_in"
                },
                {
                    "id": "port_42_to_port_50",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "50",
                    "targetPort": "50_in"
                },
                {
                    "id": "port_50_to_port_1",
                    "sourceNode": "50",
                    "sourcePort": "50_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_43_to_port_1",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_49_to_port_1",
                    "sourceNode": "49",
                    "sourcePort": "49_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_48_to_port_1",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_47_to_port_1",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_26_to_port_51",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "51",
                    "targetPort": "51_in"
                },
                {
                    "id": "port_51_to_port_52",
                    "sourceNode": "51",
                    "sourcePort": "51_out",
                    "targetNode": "52",
                    "targetPort": "52_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_52_to_port_53",
                    "sourceNode": "52",
                    "sourcePort": "52_out",
                    "targetNode": "53",
                    "targetPort": "53_in"
                },
                {
                    "id": "port_53_to_port_54",
                    "sourceNode": "53",
                    "sourcePort": "53_out",
                    "targetNode": "54",
                    "targetPort": "54_in"
                },
                {
                    "id": "port_54_to_port_1",
                    "sourceNode": "54",
                    "sourcePort": "54_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_52_to_port_55",
                    "sourceNode": "52",
                    "sourcePort": "52_out",
                    "targetNode": "55",
                    "targetPort": "55_in"
                },
                {
                    "id": "port_55_to_port_1",
                    "sourceNode": "55",
                    "sourcePort": "55_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "e049b24d45dc392aa0bca5ce7a9947de69489c41",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 419.9999999999996
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 800,
                    "y": 3260
                },
                "10": {
                    "data": {
                        "advanced": {
                            "case_sensitive": false,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_incident_1:action_result.data.*.incident_type",
                                        "value": "malware"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "10",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "filter",
                    "warnings": {},
                    "x": 1040,
                    "y": 1040
                },
                "12": {
                    "data": {
                        "action": "get indicator",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_indicator_1",
                        "id": "12",
                        "parameters": {
                            "indicator_type": "sha256",
                            "indicator_value": "filtered-data:filter_1:condition_1:container:data.summary.sha256"
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 1160
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "Indicator not found",
                                        "value": "get_indicator_1:action_result.message"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "decision_3",
                        "id": "13",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "decision",
                    "warnings": {},
                    "x": 1060,
                    "y": 1360
                },
                "15": {
                    "data": {
                        "action": "list processes",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "list processes with hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "list_processes_with_hash",
                        "id": "15",
                        "parameters": {
                            "id": "query_device_2:action_result.data.*.device_id",
                            "ioc": "filtered-data:filter_1:condition_1:container:data.summary.sha256",
                            "limit": 100
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "ioc"
                            },
                            {
                                "data_type": "numeric",
                                "default": 100,
                                "field": "limit"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "userCode": "\n    # Write your custom code here...\n\n",
                    "warnings": {},
                    "x": 380,
                    "y": 1540
                },
                "16": {
                    "data": {
                        "action": "hunt file",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "hunt_file_1",
                        "id": "16",
                        "parameters": {
                            "hash": "filtered-data:filter_1:condition_1:container:data.summary.sha256",
                            "limit": 100
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "hash"
                            },
                            {
                                "data_type": "numeric",
                                "default": 100,
                                "field": "limit"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "action",
                    "warnings": {},
                    "x": 760,
                    "y": 1520
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_indicator_1:action_result.data.*.resources.*.policy",
                                        "value": "none"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "get_indicator_1:action_result.data.*.resources.*.policy",
                                        "value": "detect"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "decision_5",
                        "id": "17",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "decision",
                    "warnings": {},
                    "x": 1580,
                    "y": 1520
                },
                "18": {
                    "data": {
                        "action": "get process detail",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_process_detail_1",
                        "id": "18",
                        "parameters": {
                            "falcon_process_id": "list_processes_with_hash:action_result.data.*.falcon_process_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "falcon_process_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "action",
                    "warnings": {},
                    "x": 380,
                    "y": 1640
                },
                "19": {
                    "data": {
                        "action": "get system info",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_system_info_1",
                        "id": "19",
                        "parameters": {
                            "id": "hunt_file_1:action_result.data.*.device_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "action",
                    "warnings": {},
                    "x": 760,
                    "y": 1640
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "container:data.summary.sha256",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 1060,
                    "y": 880
                },
                "21": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_task_note_2",
                        "id": "21",
                        "parameters": {
                            "content": "The playbook received an unexpected indicator policy and needs to be extended to handle this situation.",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": {
                                "functionId": 2,
                                "parameters": [
                                    ""
                                ],
                                "template": "** Policy not found **\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 2220,
                    "y": 1660
                },
                "22": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_3",
                        "id": "22",
                        "parameters": {
                            "content": {
                                "functionId": 3,
                                "parameters": [],
                                "template": "The file hash indicator has a detection policy of none, so previous investigations have found that the file is not harmful. This playbook will take no further action and the event will be closed.\n"
                            },
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "** Policy is none **"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1180,
                    "y": 1660
                },
                "23": {
                    "data": {
                        "action": "update incidents",
                        "actionType": "post",
                        "advanced": {
                            "customName": "close incident",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "close_incident",
                        "id": "23",
                        "parameters": {
                            "incident_id": "get_incident_1:action_result.data.*.id",
                            "status": "Closed"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "incident_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1180,
                    "y": 1780
                },
                "24": {
                    "data": {
                        "action": "update incidents",
                        "actionType": "post",
                        "advanced": {
                            "customName": "set urgency to high",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "set_urgency_to_high",
                        "id": "24",
                        "parameters": {
                            "incident_id": "get_incident_1:action_result.data.*.id",
                            "urgency": "High"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "incident_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1500,
                    "y": 1700
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "repeat incident note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "repeat_incident_note",
                        "id": "25",
                        "parameters": [
                            "filtered-data:filter_1:condition_1:container:data.summary. src_nt_host",
                            "filtered-data:filter_1:condition_1:container:data.summary.commandline",
                            "filtered-data:filter_1:condition_1:container:data.summary.sha256",
                            "filtered-data:filter_1:condition_1:container:data.summary.filepath",
                            "filtered-data:filter_1:condition_1:container:data.summary.filename",
                            "filtered-data:filter_1:condition_1:container:data.summary.falconhostlink"
                        ],
                        "template": "CrowdStrike detected a file on an endpoint which matched a previously detected file hash: \n\n| Field | Value |\n|---|---|\n| Host | {0} |\n| Command Line | {1} |\n| SHA 256 | {2} |\n| File Path | {3}\\\\{4} |\n| CrowdStrike Detection Link | {5} |  \n\n---\n\nThis event will have the severity escalated to high, and should be investigated further.\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "format",
                    "warnings": {},
                    "x": 1820,
                    "y": 1700
                },
                "26": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "add_task_note_4",
                        "id": "26",
                        "parameters": {
                            "content": "repeat_incident_note:formatted_data",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": {
                                "functionId": 4,
                                "parameters": [],
                                "template": "** Known Malicious File **\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1820,
                    "y": 1820
                },
                "27": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "add_task_note_5",
                        "id": "27",
                        "parameters": {
                            "content": "system_and_process_info_note:custom_function:system_and_process_tasknote",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": {
                                "functionId": 5,
                                "parameters": [],
                                "template": "# System and Process details"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "missionControl",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(get_incident_1_result_data)\n    phantom.debug(get_task_1_result_data)\n    phantom.debug(get_phase_1_result_data)\n    phantom.debug(system_and_process_info_note__system_and_process_tasknote)\n\n",
                    "warnings": {},
                    "x": 540,
                    "y": 2120
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "debug_1",
                        "id": "28",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": [
                                    "filtered-data:filter_1:condition_1:container:data.summary.sha256"
                                ],
                                "input_10": null,
                                "input_2": [
                                    "query_device_2:action_result.data.*.device_id"
                                ],
                                "input_3": [
                                    "list_processes_with_hash:action_result.data.*.falcon_process_id"
                                ],
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "28",
                    "type": "utility",
                    "warnings": {},
                    "x": 40,
                    "y": 1780
                },
                "30": {
                    "customCode": null,
                    "data": {
                        "advanced": {
                            "customName": "system and process info note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "system_and_process_info_note",
                        "id": "30",
                        "inputParameters": [
                            "container:data.summary.src_nt_host",
                            "container:data.summary.commandline",
                            "container:data.summary.sha256",
                            "container:data.summary.file",
                            "container:data.summary.falconhostlink",
                            "hunt_file_1:action_result.summary.device_count"
                        ],
                        "outputVariables": [
                            "system_and_process_tasknote"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    \n    phantom.debug(data_summary_src_nt_host_value)\n    phantom.debug(data_summary_commandline_value)\n    phantom.debug(data_summary_sha256_value)\n    phantom.debug(data_summary_file_value)\n    phantom.debug(data_summary_falconhostlink_value)\n    phantom.debug(hunt_file_1_result_data)\n    note = (\n        \"\\n**System and Process information**\\n\"\n            \"| Field | Value |\\n\"\n            \"| :--- | :--- |\\n\"\n        )\n    note += \"|{}|{}|\\n\".format(\"Host\", data_summary_src_nt_host_value)\n    note += \"|{}|{}|\\n\".format(\"CommandLine\", data_summary_commandline_value)\n    note += \"|{}|{}|\\n\".format(\"SHA 256\", data_summary_sha256_value)\n    note += \"|{}|{}|\\n\".format(\"File\", data_summary_file_value)\n    note += \"|{}|{}|\\n\".format(\"Falcon Host Link\", data_summary_falconhostlink_value)\n    note += \"|{}|{}|\\n\".format(\"Count of machines that have the file on disk\", hunt_file_1_summary_device_count)\n    note += \"|{}|{}|\\n\".format(\"Details of processes associated with the file hash\", \"<see 'get process details' action results>\")\n    note += \"|{}|{}|\\n\".format(\"System information of machines that have the file on disk\", \"<see 'get system info' action results>\")\n    \n    system_and_process_info_note__system_and_process_tasknote = note\n\n",
                    "warnings": {},
                    "x": 540,
                    "y": 1960
                },
                "32": {
                    "data": {
                        "action": "query device",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "query_device_2",
                        "id": "32",
                        "parameters": {
                            "filter": {
                                "functionId": 2,
                                "parameters": [
                                    "container:data.summary.computername"
                                ],
                                "template": "hostname:'{0}'\n"
                            },
                            "limit": "1"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "default": 50,
                                "field": "limit"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 1240
                },
                "34": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "debug_2",
                        "id": "34",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": [
                                    "container:data.summary.computername"
                                ],
                                "input_10": null,
                                "input_2": [
                                    "query_device_2:action_result.parameter.filter"
                                ],
                                "input_3": [
                                    "query_device_2:action_result.parameter.limit"
                                ],
                                "input_4": [
                                    "query_device_2:action_result.summary.total_devices"
                                ],
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "34",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 1280
                },
                "35": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "noop",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "noop_3",
                        "id": "35",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "noop": {
                                "description": "Do nothing and return nothing. Use this if you want to do something in a custom function setup section or leave a placeholder block in a playbook. This does not sleep or wait and will return as soon as possible.",
                                "fields": [],
                                "label": "noop",
                                "name": "noop"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "noop": {}
                        }
                    },
                    "errors": {},
                    "id": "35",
                    "type": "utility",
                    "warnings": {},
                    "x": 550,
                    "y": 1824.5
                },
                "36": {
                    "data": {
                        "advanced": {
                            "customName": "crowdstrike new file detection",
                            "customNameId": 0,
                            "description": "Prompt the user to determine whether or not to create an Indicator for the file hash and whether or not to quarantine the endpoint.",
                            "join": [],
                            "note": "Prompt the user to determine whether or not to create an Indicator for the file hash and whether or not to quarantine the endpoint."
                        },
                        "approver": {
                            "type": "user",
                            "value": "jarora"
                        },
                        "functionId": 1,
                        "functionName": "crowdstrike_new_file_detection",
                        "id": "36",
                        "message": "System and Process information\n\n\nHost:  {0}\n\nCommandLine:  {1}\n\nSHA256:  {2}\n\nFile:  {3}\n\nFalcon Host Link:  {4}\n\nNumber of devices:  {5}\n\n",
                        "parameters": [
                            "container:data.summary.src_nt_host",
                            "container:data.summary.commandline",
                            "container:data.summary.sha256",
                            "container:data.summary.file",
                            "container:data.summary.falconhostlink",
                            "hunt_file_1:action_result.summary.device_count"
                        ],
                        "responseTime": 60,
                        "responses": [
                            {
                                "responseOptions": [
                                    "No, do not create an Indicator in CrowdStrike at this time.",
                                    "Yes, create a CrowdStrike Indicator to detect and block this file hash from now on. (True Positive)",
                                    "Yes, create a CrowdStrike Indicator to ignore this file hash from now on. (False Positive)"
                                ],
                                "responsePrompt": "Should SOAR create an Indicator in CrowdStrike to track this file hash from now on?",
                                "responseType": "customList"
                            },
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "Should SOAR quarantine the endpoint?",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "36",
                    "type": "prompt",
                    "warnings": {},
                    "x": 620,
                    "y": 2240
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "indicator decision",
                            "customNameId": 0,
                            "description": "Parse the prompt response to determine how to handle the indicator.",
                            "join": [],
                            "note": "Parse the prompt response to determine how to handle the indicator."
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "No, do not create an Indicator in CrowdStrike at this time.",
                                        "value": "crowdstrike_new_file_detection:action_result.summary.responses.0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "Yes, create a CrowdStrike Indicator to detect and block this file hash from now on. (True Positive)",
                                        "value": "crowdstrike_new_file_detection:action_result.summary.responses.0"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "Yes, create a CrowdStrike Indicator to ignore this file hash from now on. (False Positive)",
                                        "value": "crowdstrike_new_file_detection:action_result.summary.responses.0"
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "indicator_decision",
                        "id": "37",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "37",
                    "type": "decision",
                    "warnings": {},
                    "x": 300,
                    "y": 2400
                },
                "40": {
                    "data": {
                        "advanced": {
                            "customName": "quarantine decision",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "crowdstrike_new_file_detection:action_result.summary.responses.1",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 6,
                        "functionName": "quarantine_decision",
                        "id": "40",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "40",
                    "type": "decision",
                    "warnings": {},
                    "x": 960,
                    "y": 2400
                },
                "41": {
                    "data": {
                        "advanced": {
                            "customName": "format ignore description",
                            "customNameId": 0,
                            "description": "Format a description to provide when creating an Indicator with a policy of \"none\".",
                            "join": [],
                            "note": "Format a description to provide when creating an Indicator with a policy of \"none\"."
                        },
                        "functionId": 1,
                        "functionName": "format_ignore_description",
                        "id": "41",
                        "parameters": [
                            "filtered-data:filter_1:condition_1:container:data.summary.falconhostlink",
                            "container:url"
                        ],
                        "template": "This indicator was created by SOAR in the playbook crowdstrike_malware_triage_modern to ignore CrowdStrike detections based on the file hash first seen in {0} and processed in SOAR as {1}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "41",
                    "type": "format",
                    "warnings": {},
                    "x": -60,
                    "y": 2560
                },
                "42": {
                    "data": {
                        "action": "upload indicator",
                        "actionType": "contain",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "upload_indicator_1",
                        "id": "42",
                        "parameters": {
                            "action": "allow",
                            "description": "format_ignore_description:formatted_data",
                            "ioc": "filtered-data:filter_1:condition_1:container:data.summary.sha256",
                            "platforms": "mac,windows,linux",
                            "source": "Splunk SOAR Playbook crowdstrike_malware_triage_modern"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ioc"
                            },
                            {
                                "data_type": "string",
                                "field": "action"
                            },
                            {
                                "data_type": "string",
                                "default": "IOC uploaded via Splunk SOAR",
                                "field": "source"
                            },
                            {
                                "data_type": "string",
                                "field": "platforms"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "42",
                    "type": "action",
                    "warnings": {},
                    "x": -60,
                    "y": 2720
                },
                "43": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add task note no indicator",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 6,
                        "functionName": "add_task_note_no_indicator",
                        "id": "43",
                        "parameters": {
                            "content": "The analyst decided not to create a custom indicator for the file hash.",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Analyst decision on indicator"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 220,
                    "y": 2560
                },
                "44": {
                    "data": {
                        "advanced": {
                            "customName": "format detect description",
                            "customNameId": 0,
                            "description": "Format a description to provide when creating an Indicator with a policy of \"detect\".",
                            "join": [],
                            "note": "Format a description to provide when creating an Indicator with a policy of \"detect\"."
                        },
                        "functionId": 3,
                        "functionName": "format_detect_description",
                        "id": "44",
                        "parameters": [
                            "filtered-data:filter_1:condition_1:container:data.summary.falconhostlink",
                            "container:url"
                        ],
                        "template": "This indicator was created by SOAR in the playbook crowdstrike_malware_triage_modern to detect and block process executions based on the file hash first seen in {0} and processed in SOAR as {1}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "format",
                    "warnings": {},
                    "x": 520,
                    "y": 2560
                },
                "45": {
                    "data": {
                        "action": "upload indicator",
                        "actionType": "contain",
                        "advanced": {
                            "customName": "create detect indicator",
                            "customNameId": 0,
                            "description": "Create an Indicator to detect and block this file hash.",
                            "join": [],
                            "note": "Create an Indicator to detect and block this file hash."
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "create_detect_indicator",
                        "id": "45",
                        "parameters": {
                            "action": "detect",
                            "ioc": "filtered-data:filter_1:condition_1:container:data.summary.sha256",
                            "platforms": "mac,windows,linux",
                            "severity": "high",
                            "source": "IOC uploaded via Splunk SOAR"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ioc"
                            },
                            {
                                "data_type": "string",
                                "field": "action"
                            },
                            {
                                "data_type": "string",
                                "default": "IOC uploaded via Splunk SOAR",
                                "field": "source"
                            },
                            {
                                "data_type": "string",
                                "field": "platforms"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "45",
                    "type": "action",
                    "warnings": {},
                    "x": 520,
                    "y": 2740
                },
                "46": {
                    "data": {
                        "action": "quarantine device",
                        "actionType": "contain",
                        "advanced": {
                            "description": "Block the endpoint from everything but the configured allowlist of network addresses while the investigation is ongoing.",
                            "join": [],
                            "note": "Block the endpoint from everything but the configured allowlist of network addresses while the investigation is ongoing."
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "quarantine_device_1",
                        "id": "46",
                        "parameters": {
                            "device_id": "query_device_2:action_result.data.*.device_id",
                            "hostname": "query_device_2:action_result.data.*.hostname"
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "46",
                    "type": "action",
                    "warnings": {},
                    "x": 880,
                    "y": 2640
                },
                "47": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add task note no quarantine",
                            "customNameId": 0,
                            "description": "Do not quarantine the endpoint because the analyst responded No in the prompt.",
                            "join": [],
                            "note": "Do not quarantine the endpoint because the analyst responded No in the prompt."
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "add_task_note_no_quarantine",
                        "id": "47",
                        "parameters": {
                            "content": "The analyst decided not to quarantine the endpoint.",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Analyst decision to quarantine device"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "47",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1400,
                    "y": 2560
                },
                "48": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add task note yes quarantine",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 8,
                        "functionName": "add_task_note_yes_quarantine",
                        "id": "48",
                        "parameters": {
                            "content": {
                                "functionId": 8,
                                "parameters": [
                                    "quarantine_device_1:action_result.parameter.hostname",
                                    "quarantine_device_1:action_result.parameter.device_id"
                                ],
                                "template": "The analyst decided to quarantine the endpoint. The followuing device has been quarantined:\n\nhostname:{0}\n\ndevice_id {1}\n\n"
                            },
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Analyst decision to quarantine device"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "48",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 900,
                    "y": 2820
                },
                "49": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 9,
                        "functionName": "add_task_note_9",
                        "id": "49",
                        "parameters": {
                            "content": "format_detect_description:formatted_data",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Indicator creation in crowdstrike"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "49",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 520,
                    "y": 2880
                },
                "5": {
                    "data": {
                        "action": "get incident",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_incident_1",
                        "id": "5",
                        "parameters": {
                            "id": "container:external_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 980,
                    "y": 544.5
                },
                "50": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 10,
                        "functionName": "add_task_note_10",
                        "id": "50",
                        "parameters": {
                            "content": "format_ignore_description:formatted_data",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Indicator creation in crowdstrike"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "50",
                    "type": "missionControl",
                    "warnings": {},
                    "x": -60,
                    "y": 2840
                },
                "51": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "approver": {
                            "type": "user",
                            "value": "jarora"
                        },
                        "functionId": 2,
                        "functionName": "prompt_2",
                        "id": "51",
                        "message": "{0}\n\n",
                        "parameters": [
                            "repeat_incident_note:formatted_data"
                        ],
                        "responseTime": 60,
                        "responses": [
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "Should Phantom quarantine the device?",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "51",
                    "type": "prompt",
                    "warnings": {},
                    "x": 1900,
                    "y": 2124.5
                },
                "52": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "prompt_2:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "decision_4",
                        "id": "52",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "52",
                    "type": "decision",
                    "warnings": {},
                    "x": 1910,
                    "y": 2444.5
                },
                "53": {
                    "data": {
                        "action": "quarantine device",
                        "actionType": "contain",
                        "advanced": {
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrike splunk soar connector"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "quarantine_device_2",
                        "id": "53",
                        "parameters": {
                            "device_id": "query_device_2:action_result.data.*.device_id",
                            "hostname": "query_device_2:action_result.data.*.hostname"
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "53",
                    "type": "action",
                    "warnings": {},
                    "x": 1840,
                    "y": 2820
                },
                "54": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add task not yes quarantine",
                            "customNameId": 1,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 11,
                        "functionName": "add_task_not_yes_quarantine_1",
                        "id": "54",
                        "parameters": {
                            "content": {
                                "functionId": 11,
                                "parameters": [
                                    "quarantine_device_2:action_result.parameter.hostname",
                                    "quarantine_device_2:action_result.parameter.device_id"
                                ],
                                "template": "The analyst decided to quarantine the endpoint. The followuing device has been quarantined:\n\nhostname:{0}\n\ndevice_id {1}\n\n\n"
                            },
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Analyst decision to quarantine device"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "54",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1840,
                    "y": 2980
                },
                "55": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add task note no quarantine",
                            "customNameId": 1,
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 12,
                        "functionName": "add_task_note_no_quarantine_1",
                        "id": "55",
                        "parameters": {
                            "content": "The analyst decided not to quarantine the endpoint.",
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": "Analyst decision to quarantine device"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "55",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 2500,
                    "y": 2660
                },
                "6": {
                    "data": {
                        "action": "get phase",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_phase_1",
                        "id": "6",
                        "parameters": {
                            "id": "get_incident_1:action_result.data.*.display_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 980,
                    "y": 660
                },
                "7": {
                    "data": {
                        "action": "get task",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_task_1",
                        "id": "7",
                        "parameters": {
                            "id": "get_incident_1:action_result.data.*.display_id",
                            "task_id": "get_phase_1:action_result.data.*.tasks.*.id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 980,
                    "y": 760
                },
                "8": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_task_note_1",
                        "id": "8",
                        "parameters": {
                            "content": {
                                "functionId": 1,
                                "parameters": [],
                                "template": "Ignoring alert because no SHA256 file hash was found\n"
                            },
                            "id": "get_incident_1:action_result.data.*.id",
                            "phase_id": "get_phase_1:action_result.data.*.id",
                            "response_plan_id": "get_incident_1:action_result.data.*.current_response_plan_phase.response_plan_id",
                            "task_id": "get_task_1:action_result.data.*.id",
                            "title": {
                                "functionId": 1,
                                "parameters": [],
                                "template": "* Crowdstrike Malware Triage Summary *\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1540,
                    "y": 1040
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.0.1.123902"
    },
    "create_time": "2023-06-26T01:41:02.586483+00:00",
    "draft_mode": false,
    "labels": [
        "malware"
    ],
    "tags": []
}